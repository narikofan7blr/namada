[package]
name = "namada"
description = "The main Namada library crate"
resolver = "2"
authors.workspace = true
edition.workspace = true
documentation.workspace = true
homepage.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["abciplus", "namada-sdk", "wasm-runtime"]
mainnet = [
  "namada_core/mainnet",
]
std = []
# NOTE "dev" features that shouldn't be used in live networks are enabled by default for now
dev = []
ferveo-tpke = [
  "namada_core/ferveo-tpke",
]
wasm-runtime = [
  "namada_core/wasm-runtime",
  "loupe",
  "parity-wasm",
  "rayon",
  "wasm-instrument",
  "wasmer-cache",
  "wasmer-compiler-singlepass",
  "wasmer-engine-dylib",
  "wasmer-engine-universal",
  "wasmer-vm",
  "wasmer",
]
# Enable queries support for an async client
async-client = [
  "async-trait",
]

# Requires async traits to be safe to send across threads
async-send = []

# tendermint-rpc support
tendermint-rpc = [
  "async-client",
  "dep:tendermint-rpc",
]
# tendermint-rpc HttpClient
http-client = [
  "tendermint-rpc/http-client"
]

abciplus = [
  "namada_core/abciplus",
  "namada_proof_of_stake/abciplus",
  "namada_ethereum_bridge/abciplus",
]

ibc-mocks = [
  "namada_core/ibc-mocks",
]

masp-tx-gen = [
  "rand",
  "rand_core",
]

# for integration tests and test utilies
testing = [
  "namada_core/testing",
  "namada_ethereum_bridge/testing",
  "namada_proof_of_stake/testing",
  "async-client",
  "proptest",
  "rand_core",
  "rand",
  "tempfile",
]

namada-sdk = [
  "tendermint-rpc",
  "masp-tx-gen",
  "ferveo-tpke",
  "masp_primitives/transparent-inputs"
]

multicore = ["masp_proofs/multicore"]

[dependencies]
namada_core = {path = "../core", default-features = false}
namada_proof_of_stake = {path = "../proof_of_stake", default-features = false}
namada_ethereum_bridge = {path = "../ethereum_bridge", default-features = false}
async-trait = {version = "0.1.51", optional = true}
bimap.workspace = true
borsh.workspace = true
circular-queue.workspace = true
clru.workspace = true
data-encoding.workspace = true
derivation-path.workspace = true
derivative.workspace = true
ethbridge-bridge-contract.workspace = true
ethers.workspace = true
eyre.workspace = true
futures.workspace = true
itertools.workspace = true
loupe = {version = "0.1.3", optional = true}
masp_primitives.workspace = true
masp_proofs = { workspace = true, features = ["download-params"] }
num256.workspace = true
orion.workspace = true
owo-colors = "3.5.0"
parity-wasm = {version = "0.45.0", features = ["sign_ext"], optional = true}
parse_duration = "2.1.1"
paste.workspace = true
proptest = {version = "1.2.0", optional = true}
prost.workspace = true
rand = {optional = true, workspace = true}
rand_core = {optional = true, workspace = true}
rayon = {version = "=1.5.3", optional = true}
ripemd.workspace = true
serde.workspace = true
serde_json.workspace = true
sha2.workspace = true
slip10_ed25519.workspace = true
tempfile = {version = "3.2.0", optional = true}
tendermint-rpc = {git = "https://github.com/heliaxdev/tendermint-rs.git", rev = "b7d1e5afc6f2ccb3fd1545c2174bab1cc48d7fa7", default-features = false, features = ["trait-client"], optional = true}
thiserror.workspace = true
tiny-bip39.workspace = true
tiny-hderive.workspace = true
toml.workspace = true
tracing.workspace = true
wasm-instrument = {version = "0.4.0", features = ["sign_ext"], optional = true}
wasmer = {git = "https://github.com/heliaxdev/wasmer", rev = "833721a1b21cd192e7f044abe2139d03ba291149", optional = true}
wasmer-cache = {git = "https://github.com/heliaxdev/wasmer", rev = "833721a1b21cd192e7f044abe2139d03ba291149", optional = true}
wasmer-compiler-singlepass = {git = "https://github.com/heliaxdev/wasmer", rev = "833721a1b21cd192e7f044abe2139d03ba291149", optional = true}
wasmer-engine-dylib = {git = "https://github.com/heliaxdev/wasmer", rev = "833721a1b21cd192e7f044abe2139d03ba291149", optional = true}
wasmer-engine-universal = {git = "https://github.com/heliaxdev/wasmer", rev = "833721a1b21cd192e7f044abe2139d03ba291149", optional = true}
wasmer-vm = {git = "https://github.com/heliaxdev/wasmer", rev = "833721a1b21cd192e7f044abe2139d03ba291149", optional = true}
wasmparser.workspace = true
zeroize.workspace = true

[target.'cfg(not(target_family = "wasm"))'.dependencies]
tokio = {workspace = true, features = ["full"]}

[target.'cfg(target_family = "wasm")'.dependencies]
wasmtimer = "0.2.0"

[dev-dependencies]
namada_core = {path = "../core", default-features = false, features = ["testing", "ibc-mocks"]}
namada_ethereum_bridge = {path = "../ethereum_bridge", default-features = false, features = ["testing"]}
namada_test_utils = {path = "../test_utils"}
assert_matches.workspace = true
async-trait.workspace = true
base58.workspace = true
byte-unit.workspace = true
k256.workspace = true
pretty_assertions.workspace = true
proptest.workspace = true
tempfile.workspace = true
test-log.workspace = true
tokio = {workspace = true, features = ["rt", "macros"]}
tracing-subscriber.workspace = true
